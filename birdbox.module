<?php

/**
 * @file
 * Allows Twitter users to tweet directly from within your Drupal website.
 */

/**
 * Implementation of hook_menu().
 */
function birdbox_menu() {
  $items = array();
  $items['admin/config/services/birdbox'] = array(
    'title' => 'Birdbox',
    'description' => 'Settings for posting tweets with Birdbox.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('birdbox_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'birdbox.admin.inc',
  );
  $items['birdbox/oauth'] = array(
    'title' => 'Birdbox OAuth',
    'page callback' => 'birdbox_oauth_page',
    'access callback' => TRUE, 
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_block_info().
 */
function birdbox_block_info() {
  $blocks = array();
  $blocks['tweet'] = array(
    'info' => t('Birdbox'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function birdbox_block_view($delta = '') {
  $block = array();
  if ($delta == 'tweet') {
    $block['subject'] = t('Birdbox');
    $block['content'] = drupal_get_form('birdbox_tweet_form');
  }
  return $block;
}

/**
 * Form for tweeting.
 */
function birdbox_tweet_form($form_state) {
  
  // If we don't have a configured Twitter consumer key and secret, we won't show the form.
  $key = variable_get('birdbox_consumer_key', '');
  $secret = variable_get('birdbox_consumer_secret', '');
  if ($key == '' || $secret == '') {
    drupal_set_message(
      t('Please <a href="@configure-url">configure</a> your Twitter consumer key and secret.', 
        array(
          '!configure-url' => url('admin/config/services/birdbox'),
        )
      ), 
      'error');
    return NULL;
  }
  
  // Consumer key and secret are okay, let's see that form!
  $form = array();
  $form['tweet_text'] = array(
    '#type' => 'textarea',
    '#title' => t('What\'s happening?'),
    '#rows' => 1,
    '#required' => TRUE,
  );
  $form['tweet_submit'] = array(
    '#type' => 'submit',
    '#value' => t('Tweet'),
  );
  return $form;
}

/**
 * Submit handler for the tweet form.
 * @TODO: Handle the situation when the user has already authorized our application
 *        and just want to tweet again. 
 */
function birdbox_tweet_form_submit($form, &$form_state) {
  // Store the tweet and the session id in the database.
  $sid = session_api_get_sid();
  $birdbox_record = array(
    'sid' => $sid, 
    'tweet' => $form_state['values']['tweet_text'],
  );
  //drupal_write_record('birdbox', $birdbox_record);
  
  $_SESSION['birdbox_oauth']['tweet'] = $form_state['values']['tweet_text'];
  // Now go for the authorization.
  birdbox_tweet_authorize($sid);
}

/**
 * Authorization request for Twitter.
 */
function birdbox_tweet_authorize($sid) {
  module_load_include('lib.php', 'oauth_common');
  module_load_include('lib.php', 'twitter');

  $twitter = new TwitterOAuth(variable_get('birdbox_consumer_key'), variable_get('birdbox_consumer_secret'));
  $token = $twitter->get_request_token();

  $_SESSION['birdbox_oauth']['sid'] = $sid;  
  $_SESSION['birdbox_oauth']['token'] = $token;
  drupal_goto($twitter->get_authorize_url($token));
}

/**
 * Handle the OAuth callback from Twitter.
 */
function birdbox_oauth_page() {
  
  if (!birdbox_oauth_validate()) {
    return 'An error occured.';
  }

  module_load_include('lib.php', 'oauth_common');
  module_load_include('lib.php', 'twitter');

  $token = $_SESSION['birdbox_oauth']['token'];
  $twitter = new TwitterOAuth(
    variable_get('birdbox_consumer_key'),
    variable_get('birdbox_consumer_secret'),
    $token['oauth_token'], 
    $token['oauth_token_secret']
  );
  if ($twitter) {
    
    if ($response = $twitter->get_access_token()) {
      $twitter_auth = new TwitterOAuth(
        variable_get('birdbox_consumer_key'),
        variable_get('birdbox_consumer_secret'),
        $response['oauth_token'], 
        $response['oauth_token_secret']
      );
      $twitter_account = $twitter_auth->users_show($response['screen_name']);
      $twitter_account->set_auth($response);
      $twitter_auth->status_update($_SESSION['birdbox_oauth']['tweet']);

      return t('Tweet successfully posted.');
    }
    else {
      watchdog('birdbox', 'Invalid Twitter OAuth request.', 'WATCHDOG_ERROR');
      return t('An error occured');
    }
  }
  else {
    watchdog('birdbox', 'Invalid Twitter OAuth request.', 'WATCHDOG_ERROR');
    return t('An error occured');
  }
}

/**
 * Validate the OAuth request on the OAuth callback page.
 */
function birdbox_oauth_validate() {  
  if (!isset($_SESSION['birdbox_oauth']) || !is_array($_SESSION['birdbox_oauth']['token']) 
      || !isset($_GET['oauth_token'])) {
    watchdog('birdbox', 'Invalid Twitter OAuth request.', 'WATCHDOG_ERROR');
    return FALSE; 
  }
  if ($_SESSION['birdbox_oauth']['token']['oauth_token'] != $_GET['oauth_token']) {
    watchdog('birdbox', 'Invalid Twitter OAuth token.', 'WATCHDOG_ERROR');
    return FALSE;
  }
  return TRUE;
}

